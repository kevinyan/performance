{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/demo.js","webpack:///./src/index.js","webpack:///./util/lib.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getPerformanceData","data","callback","setTimeout","window","performance","e","done","ie","fn","_lib","urlList","onload","img","element","attachEvent","opera","onerror","isHidden","isInFirstScreen","timer","setInterval","clearInterval","readyState","firstScreenEndTime","Date","onloadCallback","thisEndTime","imgList","document","getElementsByTagName","length","url","getAttribute","isCache","push","getTagImgList","styleList","len","tagName","background","getCurrentStyle","indexOf","split","replace","getStyleImgList","tempList","temp","getUniqueList","Image","src","bindImgOnload","domReadyEndTime","documentElement","doScroll","err","arguments","callee","onreadystatechange","addEventListener","sendData","startTime","timing","fetchStart","whiteScreenEndTime","whiteScreenTime","responseEnd","type","pageId","firstScreenTime","domReadyTime","onloadTime","onloadEndTime","_hmt","addEvent","style","currentStyle","div","getComputedStyle","display","visibility","width","offsetWidth","height","offsetHeight","client","getBoundingClientRect","left","clientWidth","body","top","clientHeight"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// import\nimport { getPerformanceData } from './index';\n\n\n// 异步调用\ngetPerformanceData((data) => {\n    console.log(data);\n})","import {\n    getCurrentStyle,\n    isHidden,\n    isInFirstScreen,\n    isCache,\n    addEvent\n} from '../util/lib';\n\n\ntry {\n\n\n    /***\n    获取首屏时间\n    **/\n    let urlList = [];\n    //收集img标签中的图片url\n    let getTagImgList = () => {\n        let imgList = document.getElementsByTagName('img');\n        for (let i = 0; i < imgList.length; i++) {\n            let img = imgList[i];\n            let url = img.getAttribute('src');\n            //判断是否隐藏、是否在首屏、是否为非缓存\n            if (!isCache(url)) {\n                urlList.push({ element: img, url: url });\n            }\n        }\n    }\n    //收集背景样式中的图片url\n    let getStyleImgList = () => {\n        let styleList = document.getElementsByTagName('*');\n        for (let i = 0, len = styleList.length; i < len; i++) {\n            let element = styleList[i];\n            //第一步判断是否隐藏及是否为图片，因为有判断专门为img的逻辑，这一步可以过滤掉大部分不相干的元素\n            if (element.tagName !== 'IMG' && !isHidden(element)) {\n                //取得元素的最终样式，避免获取覆盖的样式\n                let background = getCurrentStyle(element, 'backgroundImage');\n                //第二步判断是否设置了背景图片及是否在首屏\n                if (background && background.indexOf('url') !== -1 && isInFirstScreen(element)) {\n                    //提取出纯净的url地址\n                    let url = background.split(/\\(|\\)/g)[1];\n                    //ie两边会把双引号给带上\n                    url = url.replace(/\\\"+/g, '');\n                    urlList.push({ element: element, url: url });\n                }\n            }\n        }\n    }\n\n\n    //url去重处理\n    let getUniqueList = () => {\n        let tempList = [];\n        let temp = {};\n        for (let i = 0, len = urlList.length; i < len; i++) {\n            let url = urlList[i];\n            if (!temp[url.url]) {\n                temp[url.url] = true;\n                tempList.push(url);\n            }\n        }\n        urlList = tempList;\n    }\n\n\n\n    //绑定onload事件\n    let onload = (img, element, callback) => {\n        //判读是否为IE\n        let ie = !!(window.attachEvent && !window.opera);\n        let done = false;\n        let fn = function () {\n            //有可能发生重复响应onload的情况，所以这个地方标识一下\n            if (!done) {\n                done = true;\n                //清理一下内存\n                img = img.onload = img.onerror = null;\n                //图片加载完毕判断是否隐藏，及是否在首屏\n                if (!isHidden(element) && isInFirstScreen(element)) {\n                    callback && callback();\n                }\n            }\n        };\n        //图片加载失败的情况也需要监听\n        img.onload = img.onerror = function () {\n            fn();\n        };\n        //有的ie浏览器在缓存存在的情况可能不会响应onload事件，所以需要定时监听readyState状态\n        if (ie) {\n            //设置一个定时器，不断判断readyState状态\n            let timer = window.setInterval(function () {\n                //如果已经执行过回调了，则无需在继续心跳\n                if (done) {\n                    timer && window.clearInterval(timer);\n                    return;\n                }\n                //readyState为loaded或者comlete时代表加载完毕\n                if (img.readyState === 'loaded' || img.readyState === 'complete') {\n                    timer && window.clearInterval(timer);\n                    fn();\n                }\n            }, 10);\n        }\n    }\n    //给所有url创建Image对象，并绑定onload事件\n    let bindImgOnload = () => {\n        for (let i = 0, len = urlList.length; i < len; i++) {\n            let url = urlList[i];\n            let img = new Image();\n            //onload需要在赋值src之前，不然加载快的图片可能会在onload绑定上之前加载完毕。\n            onload(img, url.element, onloadCallback);\n            img.src = url.url;\n        }\n    }\n\n\n    //onload事件回调\n    let firstScreenEndTime = +new Date();\n\n    let onloadCallback = () => {\n        let thisEndTime = +new Date();\n        //每次都做对比，直到找出最慢的一张\n        if (thisEndTime > firstScreenEndTime) {\n            firstScreenEndTime = thisEndTime;\n        }\n    };\n\n    // 定时启动\n    setTimeout(() => {\n        getTagImgList();\n        getStyleImgList();\n        getUniqueList();\n        bindImgOnload();\n        console.log(urlList)\n    }, 300)\n\n\n\n\n    let domReadyEndTime = +new Date();\n    //绑定domready事件\n    let bindDomReadyEvent = () => {\n        let done = false;\n        let ie = !!(window.attachEvent && !window.opera);\n        let fn = function () {\n            //同样domready有可能重复响应，所以需要判断一下\n            if (!done) {\n                done = true;\n                domReadyEndTime = +new Date();\n            }\n        };\n        if (ie) {\n            //由于ie不支持DOMContentLoaded事件，因此采用不断执行doScroll的方式，\n            //因为在ie中只有页面domready之后才会成功执行doScroll方法\n            (function () {\n                try {\n                    document.documentElement.doScroll('left');\n                } catch (err) {\n                    //在domready之前执行doScroll会报错，在这里捕获异常之后继续执行doScroll\n                    setTimeout(arguments.callee, 0);\n                    return;\n                }\n                //没有异常发生时就可以执行回调了\n                fn();\n            })();\n            //如果实在不执行doScroll，有的时候页面加载很快的时候，就直接在onload事件中去执行回调\n            document.onreadystatechange = function () {\n                if (document.readyState === 'complete') {\n                    document.onreadystatechange = null;\n                    fn();\n                }\n            };\n        } else {\n            //非IE浏览器直接监听DOMContentLoaded事件\n            document.addEventListener('DOMContentLoaded', function () {\n                fn();\n            }, false);\n        }\n    }\n    bindDomReadyEvent();\n\n\n\n    //发送数据\n    let sendData = () => {\n        //需要发送的数据\n\n        if (!window.startTime) {\n            window.startTime = performance.timing.fetchStart;\n        }\n\n        if (!window.whiteScreenEndTime) {\n            window.whiteScreenTime = performance.timing.responseEnd - performance.timing.fetchStart;\n        }\n\n        let data = {};\n        window.performance.data = data = {\n            //统计类型\n            type: 'performance',\n            //页面id\n            pageId: window.pageId || 'defualt',\n            //白屏时间\n            whiteScreenTime: window.whiteScreenEndTime - window.startTime,\n            //首屏时间 有时候首屏取不到图片，就取domReady时间\n            firstScreenTime: (firstScreenEndTime || domReadyEndTime) - window.startTime,\n            //用户可操作时间\n            domReadyTime: domReadyEndTime - window.startTime,\n            //页面总下载时间\n            onloadTime: onloadEndTime - window.startTime\n        };\n\n\n        if (window._hmt) {\n            _hmt.push(['_trackEvent', 'timing', 'whiteScreenTime', data.whiteScreenTime]);\n            _hmt.push(['_trackEvent', 'timing', 'firstScreenTime', data.firstScreenTime]);\n            _hmt.push(['_trackEvent', 'timing', 'domReadyTime', data.domReadyTime]);\n            _hmt.push(['_trackEvent', 'timing', 'onloadTime', data.onloadTime]);\n        } else {\n            console.log(data);\n        }\n\n\n\n\n    }\n\n\n    let onloadEndTime = +new Date();\n    //有可能此时页面已经加载完毕。\n    if (document.readyState === 'complete') {\n        sendData();\n    } else {\n        addEvent(window, 'load', function () {\n            onloadEndTime = +new Date();\n            sendData();\n        });\n    }\n\n} catch (e) {\n    console.log(e);\n}\n\nexport function getPerformanceData(callback) {\n    try {\n        setTimeout(() => {\n            callback(window.performance.data);\n        }, 1000);\n    } catch (e) {\n        console.log(e);\n    }\n\n    return;\n}","// 获取当前dom元素的CSS属性\nlet a = '12312';\n\nlet getCurrentStyle = (element, style) => {\n    let newstyle = '';\n    if (element.currentStyle) {\n        //IE上兼容\n        newstyle = div.currentStyle[style];\n    } else {\n        //火狐谷歌上兼容\n        newstyle = window.getComputedStyle(element, null)[style]\n    }\n    return newstyle;\n}\n\n\n//判断是否隐藏\nlet isHidden = element => {\n    //获取元素最终样式\n    let display = getCurrentStyle(element, 'display');\n    let visibility = getCurrentStyle(element, 'visibility');\n    //获取元素宽高\n    let width = element.offsetWidth;\n    let height = element.offsetHeight;\n    //对于绝对隐藏、相对隐藏、宽高为0的元素可以认为是不需要在首屏展示的\n    return display === 'none' ||\n        visibility === 'hidden' ||\n        width === 0 ||\n        height === 0;\n}\n\n//判断是否在首屏\nlet isInFirstScreen = element => {\n\n    //获取元素距离浏览器可视区域的相对距离\n    let client = element.getBoundingClientRect();\n    return client.left >= 0 &&\n        client.left < (document.documentElement.clientWidth || document.body.clientWidth) &&\n        client.top >= 0 &&\n        client.top < (document.documentElement.clientHeight || document.body.clientHeight);\n}\n\n\n\n//判读是否为非缓存图片\nlet isCache = url => {\n    //排除掉一些无法缓存的图片，比如验证码,不带src属性的占位图片等\n    return !url || url.indexOf('?') !== -1;\n}\n\n\n//兼容浏览器的事件监听函数\nlet addEvent = (element, type, callback) => {\n\n    if (element.addEventListener) {\n        element.addEventListener(type, callback, false);\n    } else if (element.attachEvent) {\n        element.attachEvent('on' + type, callback);\n    } else {\n        element['on' + type] = callback;\n    }\n}\n\n\nexport {\n    getCurrentStyle,\n    isHidden,\n    isInFirstScreen,\n    isCache,\n    addEvent\n}"],"sourceRoot":""}